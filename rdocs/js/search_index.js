var search_data = {"index":{"searchIndex":["celes","eot","geolatlng","maindoc","ajd_to_datetime()","al_sun()","alsun()","angle_delta_epsilon()","angle_delta_oblique()","angle_delta_orbit()","angle_delta_psi()","angle_equation_of_time()","apparent_longitude()","apparent_longitude_string()","astronomical_twilight_end_dt()","astronomical_twilight_end_jd()","astronomical_twilight_start_dt()","astronomical_twilight_start_jd()","center()","check_jd_nil()","check_jd_zero()","check_t_nil()","check_t_zero()","choice()","civil_twilight_end_dt()","civil_twilight_end_jd()","civil_twilight_start_dt()","civil_twilight_start_jd()","cosalsun()","cosine_al_sun()","cosine_apparent_longitude()","cosine_tl_sun()","cosine_to_earth()","cosine_true_longitude()","cosine_true_obliquity()","dec_sun()","declination()","declination_string()","degrees_to_s()","delta_epsilon()","delta_oblique()","delta_orbit()","delta_psi()","delta_t_ecliptic()","delta_t_elliptic()","display_equation_of_time()","display_time_string()","dt_parts()","eccentricity_earth()","eccentricity_earth_orbit()","ecliptic_longitude()","eot()","eot_jd()","eq_of_equinox()","equation_of_center()","era()","f_string()","float_parts()","format_time()","geometric_mean_longitude()","gml_sun()","ha_sun()","horizon_angle()","jd_to_date_string()","jd_to_datetime()","julian_period_day_fraction_to_time()","lambda()","local_noon_dt()","ma_sun()","ma_ta_set()","mean_anomaly()","mean_anomaly_string()","mean_local_noon_jd()","mean_longitude_aries()","mean_obliquity()","mean_obliquity_of_ecliptic()","mean_obliquity_string()","ml_aries()","ml_sun()","mo_earth()","mod_360()","nautical_twilight_end_dt()","nautical_twilight_end_jd()","nautical_twilight_start_dt()","nautical_twilight_start_jd()","new()","new()","now()","obliquity_correction()","ra_sun()","right_ascension()","right_ascension_string()","right_ascension_sun()","set_coordinates()","show_minutes()","show_now()","sign_min()","sine_al_sun()","sine_apparent_longitude()","sine_tl_sun()","sine_to_earth()","sine_true_longitude()","sine_true_obliquity()","string_al_sun()","string_day_fraction_to_time()","string_dec_sun()","string_deg_to_time()","string_delta_oblique()","string_delta_orbit()","string_eot()","string_eqc()","string_jd_to_date()","string_ma_sun()","string_mo_earth()","string_ra_sun()","string_ta_sun()","string_time()","string_tl_sun()","string_to_earth()","sunrise_dt()","sunrise_jd()","sunset_dt()","sunset_jd()","ta_sun()","time_delta_oblique()","time_delta_orbit()","time_eot()","tl_aries()","tl_sun()","to_earth()","toearth()","true_anomaly()","true_anomaly_string()","true_longitude()","true_longitude_aries()","true_longitude_string()","true_obliquity()","true_obliquity_string()","truncate()","readme","wiki"],"longSearchIndex":["celes","eot","geolatlng","maindoc","eot#ajd_to_datetime()","eot#al_sun()","eot#alsun()","eot#angle_delta_epsilon()","eot#angle_delta_oblique()","eot#angle_delta_orbit()","eot#angle_delta_psi()","eot#angle_equation_of_time()","eot#apparent_longitude()","eot#apparent_longitude_string()","eot#astronomical_twilight_end_dt()","eot#astronomical_twilight_end_jd()","eot#astronomical_twilight_start_dt()","eot#astronomical_twilight_start_jd()","eot#center()","eot#check_jd_nil()","eot#check_jd_zero()","eot#check_t_nil()","eot#check_t_zero()","eot#choice()","eot#civil_twilight_end_dt()","eot#civil_twilight_end_jd()","eot#civil_twilight_start_dt()","eot#civil_twilight_start_jd()","eot#cosalsun()","eot#cosine_al_sun()","eot#cosine_apparent_longitude()","eot#cosine_tl_sun()","eot#cosine_to_earth()","eot#cosine_true_longitude()","eot#cosine_true_obliquity()","eot#dec_sun()","eot#declination()","eot#declination_string()","eot#degrees_to_s()","eot#delta_epsilon()","eot#delta_oblique()","eot#delta_orbit()","eot#delta_psi()","eot#delta_t_ecliptic()","eot#delta_t_elliptic()","eot#display_equation_of_time()","eot#display_time_string()","eot#dt_parts()","eot#eccentricity_earth()","eot#eccentricity_earth_orbit()","eot#ecliptic_longitude()","eot#eot()","eot#eot_jd()","eot#eq_of_equinox()","eot#equation_of_center()","eot#era()","eot#f_string()","eot#float_parts()","eot#format_time()","eot#geometric_mean_longitude()","eot#gml_sun()","eot#ha_sun()","eot#horizon_angle()","eot#jd_to_date_string()","eot#jd_to_datetime()","eot#julian_period_day_fraction_to_time()","eot#lambda()","eot#local_noon_dt()","eot#ma_sun()","eot#ma_ta_set()","eot#mean_anomaly()","eot#mean_anomaly_string()","eot#mean_local_noon_jd()","eot#mean_longitude_aries()","eot#mean_obliquity()","eot#mean_obliquity_of_ecliptic()","eot#mean_obliquity_string()","eot#ml_aries()","eot#ml_sun()","eot#mo_earth()","eot#mod_360()","eot#nautical_twilight_end_dt()","eot#nautical_twilight_end_jd()","eot#nautical_twilight_start_dt()","eot#nautical_twilight_start_jd()","eot::new()","geolatlng::new()","eot#now()","eot#obliquity_correction()","eot#ra_sun()","eot#right_ascension()","eot#right_ascension_string()","eot#right_ascension_sun()","geolatlng#set_coordinates()","eot#show_minutes()","eot#show_now()","eot#sign_min()","eot#sine_al_sun()","eot#sine_apparent_longitude()","eot#sine_tl_sun()","eot#sine_to_earth()","eot#sine_true_longitude()","eot#sine_true_obliquity()","eot#string_al_sun()","eot#string_day_fraction_to_time()","eot#string_dec_sun()","eot#string_deg_to_time()","eot#string_delta_oblique()","eot#string_delta_orbit()","eot#string_eot()","eot#string_eqc()","eot#string_jd_to_date()","eot#string_ma_sun()","eot#string_mo_earth()","eot#string_ra_sun()","eot#string_ta_sun()","eot#string_time()","eot#string_tl_sun()","eot#string_to_earth()","eot#sunrise_dt()","eot#sunrise_jd()","eot#sunset_dt()","eot#sunset_jd()","eot#ta_sun()","eot#time_delta_oblique()","eot#time_delta_orbit()","eot#time_eot()","eot#tl_aries()","eot#tl_sun()","eot#to_earth()","eot#toearth()","eot#true_anomaly()","eot#true_anomaly_string()","eot#true_longitude()","eot#true_longitude_aries()","eot#true_longitude_string()","eot#true_obliquity()","eot#true_obliquity_string()","eot#truncate()","",""],"info":[["Celes","","Celes.html","","<p>Celes gives you an undocumented Object class with rdoc generator. Use\nbundle exec rake rdocs if you don&#39;t …\n"],["Eot","","Eot.html","","<p>class Eot file = angle_displays.rb: methods for display of angles.\n<p>class Eot file = angles.rb: methods …\n"],["GeoLatLng","","GeoLatLng.html","","<p>class GeoLatLng file = geo_lat_lng_smt.rb class for location coordinates\nlookup\n"],["MainDoc","","MainDoc.html","","<p>Eot is short for Equation of time. It is mainly used to find a true solar\ntransit angle of the given …\n"],["ajd_to_datetime","Eot","Eot.html#method-i-ajd_to_datetime","(ajd)","<p>Pass in an AJD number Returns a DateTime object only DateTime#jd() to work\nwith so add a half day to …\n"],["al_sun","Eot","Eot.html#method-i-al_sun","()","<p>Apparent solar longitude = true longitude - aberation\n"],["alsun","Eot","Eot.html#method-i-alsun","()",""],["angle_delta_epsilon","Eot","Eot.html#method-i-angle_delta_epsilon","()","<p>From deltas.rb: delta epsilon component of equation of equinox\n"],["angle_delta_oblique","Eot","Eot.html#method-i-angle_delta_oblique","()","<p>From deltas.rb: one time component to total equation of time\n"],["angle_delta_orbit","Eot","Eot.html#method-i-angle_delta_orbit","()","<p>From deltas.rb: one time component to total equation of time\n"],["angle_delta_psi","Eot","Eot.html#method-i-angle_delta_psi","()","<p>From deltas.rb: component of equation of equinox\n"],["angle_equation_of_time","Eot","Eot.html#method-i-angle_equation_of_time","()","<p>From deltas.rb: total equation of time\n"],["apparent_longitude","Eot","Eot.html#method-i-apparent_longitude","()",""],["apparent_longitude_string","Eot","Eot.html#method-i-apparent_longitude_string","()",""],["astronomical_twilight_end_dt","Eot","Eot.html#method-i-astronomical_twilight_end_dt","()","<p>From times.rb: Uses @ajd attribute Returns astronomical twilight end as a\nDateTime\n"],["astronomical_twilight_end_jd","Eot","Eot.html#method-i-astronomical_twilight_end_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns astronomical twilight end as\na Julian Day Number\n"],["astronomical_twilight_start_dt","Eot","Eot.html#method-i-astronomical_twilight_start_dt","()","<p>From times.rb: Uses @ajd attribute Returns astronomical twilight start as a\nDateTime\n"],["astronomical_twilight_start_jd","Eot","Eot.html#method-i-astronomical_twilight_start_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns astronomical twilight start\nas a Julian Day Number\n"],["center","Eot","Eot.html#method-i-center","()","<p>equation of centre is added to mean anomaly to get true anomaly.\n"],["check_jd_nil","Eot","Eot.html#method-i-check_jd_nil","(jd = DJ00)","<p>From utilities.rb: A check for default J2000 sets default when arg is nil\n"],["check_jd_zero","Eot","Eot.html#method-i-check_jd_zero","(jd = DJ00)","<p>From utilities.rb: A check for default J2000 sets default when arg is zero\n"],["check_t_nil","Eot","Eot.html#method-i-check_t_nil","(dt = DT2000)","<p>From utilities.rb: A check for default DT2000 sets default when arg is nil\n"],["check_t_zero","Eot","Eot.html#method-i-check_t_zero","(dt = DT2000)","<p>From utilities.rb: A check for default DT2000 sets default when arg is zero\n"],["choice","Eot","Eot.html#method-i-choice","(c)","<p>used by ha_sun method to select rise set and civil, nautical, astronomical\ntwilights.\n"],["civil_twilight_end_dt","Eot","Eot.html#method-i-civil_twilight_end_dt","()","<p>From times.rb: Uses @ajd attribute Returns civil twilight end as a DateTime\n"],["civil_twilight_end_jd","Eot","Eot.html#method-i-civil_twilight_end_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns civil twilight end as a\nJulian Day Number\n"],["civil_twilight_start_dt","Eot","Eot.html#method-i-civil_twilight_start_dt","()","<p>From times.rb: Uses @ajd attribute Returns civil twilight start as a\nDateTime\n"],["civil_twilight_start_jd","Eot","Eot.html#method-i-civil_twilight_start_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns civil twilight start as a\nJulian Day Number\n"],["cosalsun","Eot","Eot.html#method-i-cosalsun","()",""],["cosine_al_sun","Eot","Eot.html#method-i-cosine_al_sun","()","<p>From trigometric.rb: cosine apparent longitude could be useful when\ndividing\n"],["cosine_apparent_longitude","Eot","Eot.html#method-i-cosine_apparent_longitude","()",""],["cosine_tl_sun","Eot","Eot.html#method-i-cosine_tl_sun","()","<p>From trigometric.rb: cosine true longitude used in solar right ascension\n"],["cosine_to_earth","Eot","Eot.html#method-i-cosine_to_earth","()","<p>From trigometric.rb: cosine true obliquity used in solar right ascension\nand equation of equinox\n"],["cosine_true_longitude","Eot","Eot.html#method-i-cosine_true_longitude","()",""],["cosine_true_obliquity","Eot","Eot.html#method-i-cosine_true_obliquity","()",""],["dec_sun","Eot","Eot.html#method-i-dec_sun","()","<p>solar declination\n"],["declination","Eot","Eot.html#method-i-declination","()",""],["declination_string","Eot","Eot.html#method-i-declination_string","()",""],["degrees_to_s","Eot","Eot.html#method-i-degrees_to_s","(radians = 0.0)","<p>String formatter for d:m:s display\n"],["delta_epsilon","Eot","Eot.html#method-i-delta_epsilon","()",""],["delta_oblique","Eot","Eot.html#method-i-delta_oblique","()",""],["delta_orbit","Eot","Eot.html#method-i-delta_orbit","()",""],["delta_psi","Eot","Eot.html#method-i-delta_psi","()",""],["delta_t_ecliptic","Eot","Eot.html#method-i-delta_t_ecliptic","()",""],["delta_t_elliptic","Eot","Eot.html#method-i-delta_t_elliptic","()",""],["display_equation_of_time","Eot","Eot.html#method-i-display_equation_of_time","()",""],["display_time_string","Eot","Eot.html#method-i-display_time_string","(dt = DT2000)",""],["dt_parts","Eot","Eot.html#method-i-dt_parts","(val)","<p>From displays.rb creates [h,m,s,ds] array from Time or DateTime\n"],["eccentricity_earth","Eot","Eot.html#method-i-eccentricity_earth","()","<p>eccentricity of elliptical Earth orbit around Sun Horners&#39; calculation\nmethod\n"],["eccentricity_earth_orbit","Eot","Eot.html#method-i-eccentricity_earth_orbit","()",""],["ecliptic_longitude","Eot","Eot.html#method-i-ecliptic_longitude","()",""],["eot","Eot","Eot.html#method-i-eot","()",""],["eot_jd","Eot","Eot.html#method-i-eot_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns EOT as an AJD Julian number\n"],["eq_of_equinox","Eot","Eot.html#method-i-eq_of_equinox","()","<p>equation of equinox is used for true longitude of Aries but Depricated by\nCeles.gst06a() compinents are …\n"],["equation_of_center","Eot","Eot.html#method-i-equation_of_center","()",""],["era","Eot","Eot.html#method-i-era","()","<p>Earth rotation angle (for comparison to tl_aries which uses gmst06)\n"],["f_string","Eot","Eot.html#method-i-f_string","(sgn, u, m, s, ds)","<p>From utilities.rb: formats degree string\n"],["float_parts","Eot","Eot.html#method-i-float_parts","(val)","<p>From displays.rb creates [h,m,s,ds] from hours Float\n"],["format_time","Eot","Eot.html#method-i-format_time","(h, m, s, ds)","<p>From displays.rb formats time components\n"],["geometric_mean_longitude","Eot","Eot.html#method-i-geometric_mean_longitude","()",""],["gml_sun","Eot","Eot.html#method-i-gml_sun","()","<p>angle geometric mean longitude needed to get true longitude for low\naccuracy.\n"],["ha_sun","Eot","Eot.html#method-i-ha_sun","(c)","<p>horizon angle for provided geo coordinates used for angles from transit to\nhorizons east, west.\n"],["horizon_angle","Eot","Eot.html#method-i-horizon_angle","(c)",""],["jd_to_date_string","Eot","Eot.html#method-i-jd_to_date_string","(jd = DJ00)",""],["jd_to_datetime","Eot","Eot.html#method-i-jd_to_datetime","(ajd)",""],["julian_period_day_fraction_to_time","Eot","Eot.html#method-i-julian_period_day_fraction_to_time","(jpd_time = 0.0)",""],["lambda","Eot","Eot.html#method-i-lambda","()",""],["local_noon_dt","Eot","Eot.html#method-i-local_noon_dt","()","<p>From times.rb: Uses @ajd and @longitude attributes Returns DateTime object\nof local noon or solar transit …\n"],["ma_sun","Eot","Eot.html#method-i-ma_sun","()","<p>angle of Suns&#39; mean anomaly calculated in nutation.rb via celes\nfunction sets ta attribute for the …\n"],["ma_ta_set","Eot","Eot.html#method-i-ma_ta_set","()","<p>From init.rb method to reset ma and ta after initialization init sets them\nusing ajd initial Float value …\n"],["mean_anomaly","Eot","Eot.html#method-i-mean_anomaly","()",""],["mean_anomaly_string","Eot","Eot.html#method-i-mean_anomaly_string","()",""],["mean_local_noon_jd","Eot","Eot.html#method-i-mean_local_noon_jd","()","<p>From jd_times.rb: Uses @ajd and @longitude attributes Returns DateTime\nobject of local mean noon or solar …\n"],["mean_longitude_aries","Eot","Eot.html#method-i-mean_longitude_aries","()",""],["mean_obliquity","Eot","Eot.html#method-i-mean_obliquity","()",""],["mean_obliquity_of_ecliptic","Eot","Eot.html#method-i-mean_obliquity_of_ecliptic","()",""],["mean_obliquity_string","Eot","Eot.html#method-i-mean_obliquity_string","()",""],["ml_aries","Eot","Eot.html#method-i-ml_aries","()","<p>Mean equinox point where right ascension is measured from as zero hours. #\nsee www.iausofa.org/publications/aas04.pdf …\n"],["ml_sun","Eot","Eot.html#method-i-ml_sun","()",""],["mo_earth","Eot","Eot.html#method-i-mo_earth","()","<p>mean obliquity of Earth\n"],["mod_360","Eot","Eot.html#method-i-mod_360","(x = 0.0)","<p>From utilities.rb: Keeps large angles in range of 360.0 aliased by truncate\n"],["nautical_twilight_end_dt","Eot","Eot.html#method-i-nautical_twilight_end_dt","()","<p>From times.rb: Uses @ajd attribute Returns nautical twilight end as a\nDateTime\n"],["nautical_twilight_end_jd","Eot","Eot.html#method-i-nautical_twilight_end_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns nautical twilight end as a\nJulian Day Number\n"],["nautical_twilight_start_dt","Eot","Eot.html#method-i-nautical_twilight_start_dt","()","<p>From times.rb: Uses @ajd attribute Returns nautical twilight start as a\nDateTime\n"],["nautical_twilight_start_jd","Eot","Eot.html#method-i-nautical_twilight_start_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns nautical twilight start as a\nJulian Day Number\n"],["new","Eot","Eot.html#method-c-new","()","<p>From init.rb: Initialize to set attributes\n"],["new","GeoLatLng","GeoLatLng.html#method-c-new","()","<p>Instance variables\n"],["now","Eot","Eot.html#method-i-now","()","<p>From times.rb: sets @ajd to DateTime.now Returns EOT (equation of time) now\nin decimal minutes form\n"],["obliquity_correction","Eot","Eot.html#method-i-obliquity_correction","()",""],["ra_sun","Eot","Eot.html#method-i-ra_sun","()",""],["right_ascension","Eot","Eot.html#method-i-right_ascension","()",""],["right_ascension_string","Eot","Eot.html#method-i-right_ascension_string","()",""],["right_ascension_sun","Eot","Eot.html#method-i-right_ascension_sun","()","<p>solar right ascension\n"],["set_coordinates","GeoLatLng","GeoLatLng.html#method-i-set_coordinates","()","<p>coordinates lookup\n"],["show_minutes","Eot","Eot.html#method-i-show_minutes","(min = 0.0)","<p>From displays.rb String formatter for + and - time\n"],["show_now","Eot","Eot.html#method-i-show_now","(now = now(Time.now.utc))","<p>From displays.rb String for time now\n"],["sign_min","Eot","Eot.html#method-i-sign_min","(min)","<p>From displays.rb displays + or - sign\n"],["sine_al_sun","Eot","Eot.html#method-i-sine_al_sun","()","<p>From trigometric.rb: sine apparent longitude used in solar declination\n"],["sine_apparent_longitude","Eot","Eot.html#method-i-sine_apparent_longitude","()",""],["sine_tl_sun","Eot","Eot.html#method-i-sine_tl_sun","()","<p>From trigometric.rb: sine true longitude used in solar right ascension\n"],["sine_to_earth","Eot","Eot.html#method-i-sine_to_earth","()","<p>From trigometric.rb: sine true obliquity angle of Earth used in solar\ndeclination\n"],["sine_true_longitude","Eot","Eot.html#method-i-sine_true_longitude","()",""],["sine_true_obliquity","Eot","Eot.html#method-i-sine_true_obliquity","()",""],["string_al_sun","Eot","Eot.html#method-i-string_al_sun","()","<p>String format of apparent longitude\n"],["string_day_fraction_to_time","Eot","Eot.html#method-i-string_day_fraction_to_time","(jpd_time = 0.0)","<p>From displays.rb String formatter for fraction of Julian day number\n"],["string_dec_sun","Eot","Eot.html#method-i-string_dec_sun","()","<p>String format of declination\n"],["string_deg_to_time","Eot","Eot.html#method-i-string_deg_to_time","(radians = 0.0)","<p>From displays.rb radians to time method\n"],["string_delta_oblique","Eot","Eot.html#method-i-string_delta_oblique","()","<p>String format for delta oblique\n"],["string_delta_orbit","Eot","Eot.html#method-i-string_delta_orbit","()","<p>String format for delta orbit\n"],["string_eot","Eot","Eot.html#method-i-string_eot","()","<p>From displays.rb Equation of time output for minutes and seconds\n"],["string_eqc","Eot","Eot.html#method-i-string_eqc","()","<p>String format for centre\n"],["string_jd_to_date","Eot","Eot.html#method-i-string_jd_to_date","(jd = DJ00)","<p>From displays.rb String format conversion of jd to date\n"],["string_ma_sun","Eot","Eot.html#method-i-string_ma_sun","()","<p>String format of mean anomaly\n"],["string_mo_earth","Eot","Eot.html#method-i-string_mo_earth","()","<p>String format of mean obliquity\n"],["string_ra_sun","Eot","Eot.html#method-i-string_ra_sun","()","<p>String format of right ascension\n"],["string_ta_sun","Eot","Eot.html#method-i-string_ta_sun","()","<p>String format of true anomaly\n"],["string_time","Eot","Eot.html#method-i-string_time","(dt = DT2000)","<p>From displays.rb String formatter for h:m:s display\n"],["string_tl_sun","Eot","Eot.html#method-i-string_tl_sun","()","<p>String format of true longitude\n"],["string_to_earth","Eot","Eot.html#method-i-string_to_earth","()","<p>String format of true obliquity\n"],["sunrise_dt","Eot","Eot.html#method-i-sunrise_dt","()","<p>From times.rb: Uses @ajd attribute Returns a DateTime object of local\nsunrise\n"],["sunrise_jd","Eot","Eot.html#method-i-sunrise_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns Sunrise as a Julian Day\nNumber\n"],["sunset_dt","Eot","Eot.html#method-i-sunset_dt","()","<p>From times.rb: Uses @ajd attribute Returns a DateTime object of local\nsunset\n"],["sunset_jd","Eot","Eot.html#method-i-sunset_jd","()","<p>From jd_times.rb: Uses @ajd attribute Returns Sunset as a Julian Day Number\n"],["ta_sun","Eot","Eot.html#method-i-ta_sun","()","<p>angle true anomaly used in equation of time\n"],["time_delta_oblique","Eot","Eot.html#method-i-time_delta_oblique","()","<p>From delta_times.rb: Uses @ajd attribute Returns Oblique component of EOT\nin decimal minutes time\n"],["time_delta_orbit","Eot","Eot.html#method-i-time_delta_orbit","()","<p>From delta_times.rb: Uses @ajd attribute Returns Orbit component of EOT in\ndecimal minutes time\n"],["time_eot","Eot","Eot.html#method-i-time_eot","()","<p>From delta_times.rb: Uses @ajd attribute Returns EOT as a float for decimal\nminutes time\n"],["tl_aries","Eot","Eot.html#method-i-tl_aries","()","<p>true longitude of equinox &#39;first point of aries&#39; considers nutation\n"],["tl_sun","Eot","Eot.html#method-i-tl_sun","()","<p>angle of true longitude sun used in equation of time\n"],["to_earth","Eot","Eot.html#method-i-to_earth","()","<p>true obliquity considers nutation\n"],["toearth","Eot","Eot.html#method-i-toearth","()",""],["true_anomaly","Eot","Eot.html#method-i-true_anomaly","()",""],["true_anomaly_string","Eot","Eot.html#method-i-true_anomaly_string","()",""],["true_longitude","Eot","Eot.html#method-i-true_longitude","()",""],["true_longitude_aries","Eot","Eot.html#method-i-true_longitude_aries","()",""],["true_longitude_string","Eot","Eot.html#method-i-true_longitude_string","()",""],["true_obliquity","Eot","Eot.html#method-i-true_obliquity","()",""],["true_obliquity_string","Eot","Eot.html#method-i-true_obliquity_string","()",""],["truncate","Eot","Eot.html#method-i-truncate","(x = 0.0)",""],["README","","README_rdoc.html","","<p><img\nsrc=“https://travis-ci.org/DouglasAllen/gem-equationoftime.svg?branch=master”\nalt=“Build Status” …\n"],["wiki","","wiki_md.html","","<p>Some examples\n<p>Wiki 1:\n<p>start irb\n"]]}}